
PrintRegs
        stmfd sp!,{r0,lr}
        bl getCLayer
        str r1,[r0,#4]
        str r2,[r0,#8]
        bl CPrintRegs
        ldmfd sp!,{r0,lr}
        mov pc,lr

OSGetEnv
        stmfd sp!,{lr}
        bl getCLayer
        bl CGetEnv
        ldr r1,[r0,#4]
        ldr r2,[r0,#8]
        ldr r0,[r0]
        ldmfd sp!,{lr}
        mov pc,lr

OSGenerateError
        stmfd sp!,{r0,lr}
        bl getCLayer        ; pass r0 implicitly to clayer.r[0]
        bl CGenerateError
        ldmfd sp!,{r0,lr}
        mov pc,lr

OSExit
        stmfd sp!,{r0,lr}
        bl CExit
        ldmfd sp!,{r0,lr}
        mov pc,lr

OSSynchroniseCodeAreas
        mov pc,lr

OSClose
        stmfd sp!,{lr}
        bl CClose
        ldmfd sp!,{lr}
        mov pc,lr

OSChangeEnvironment
        stmfd sp!,{lr}
        bl CChangeEnvironment
        ldr r1,[r0,#4]          ; r0 is now a pointer to the register block
        ldr r2,[r0,#8]
        ldr r3,[r0,#12]
        ldr r0,[r0]
        ldmfd sp!,{lr}
        mov pc,lr

QuickExit
        ; syscall exit(int status)
        mov r0, #1     ; status
        mov r7, #1     ; syscall #1 (exit)
        swi #0         ; invoke syscall


        LNK     fp
