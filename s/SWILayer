        IMPORT getCLayer
        IMPORT CPrintRegs
        IMPORT CGetEnv
        IMPORT CGenerateError
        IMPORT CExit
        IMPORT CFind
        IMPORT CChangeEnvironment

PrintRegs
        push {r0,r12,lr}
        bl getCLayer
        mov r12,r0
        stmia r12!,{r0-r9}
        bl CPrintRegs
        pop {r0,r12,lr}
        mov pc,lr

OSGetEnv
        push {lr}
        bl getCLayer
        bl CGetEnv
        ldr r1,[r0,#4]
        ldr r2,[r0,#8]
        ldr r0,[r0]
        pop {lr}
        mov pc,lr

OSGenerateError
        push {r0,lr}
        bl getCLayer        ; pass r0 implicitly to clayer.r[0]
        bl CGenerateError
        pop {r0,lr}
        mov pc,lr

OSExit
        push {r0,lr}
        bl CExit
        pop {r0,lr}
        mov pc,lr

OSSynchroniseCodeAreas
        mov pc,lr

OSFind
        push {lr}
        bl CFind
        pop {lr}
        mov pc,lr

OSChangeEnvironment
        push {lr}
        bl CChangeEnvironment   ; passing r0-r3 as arguments directly
        ldr r1,[r0,#4]          ; r0 is now a pointer to the register block
        ldr r2,[r0,#8]
        ldr r3,[r0,#12]
        ldr r0,[r0]
        bl PrintRegs
        pop {lr}
        mov pc,lr

OSWriteS
        push {lr}
        
        pop {lr}
        mov pc,lr
        

QuickExit
        bl PrintRegs
        ; syscall exit(int status)
        mov r0, #1     ; status
        mov r7, #1     ; syscall #1 (exit)
        swi #0         ; invoke syscall


        LNK     fp
